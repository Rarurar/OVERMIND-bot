import random
import math
import os
from colorama import Fore
import sys


class Bot:
    def __init__(self):
        self.topic = None
        self.select_topic()

    def select_topic(self):
        print("Ви можете задати мені питання з наступних тем:")
        print(Fore.BLUE + "1. Фізика\n2. Математика\n3. Географія\n4. Астрономія\n5. Філологія\n6. Загальне\n" +
              Fore.RED + "Введіть Х, щоб закінчити сесію.")
        user_response = input(Fore.GREEN + "Введіть номер або назву теми: \n" + Fore.YELLOW)

        reactions = [
            "Цікава тема!",
            "Я дуже люблю цю тему!",
            "Гарний вибір!",
            "Цікаво, що ви хочете дізнатись про це."
        ]

        if user_response == "1" or user_response.lower() == "фізика":
            self.topic = "фізика"
            print("Обрана тема -", self.topic)
            Physics()
            print(random.choice(reactions))
        elif user_response == "2" or user_response.lower() == "математика":
            self.topic = "математика"
            print("Обрана тема -", self.topic)
            Mathematics()
            print(random.choice(reactions))
        elif user_response == '3' or user_response.lower() == 'географія':
            self.topic = 'географія'
            print('Обрана тема -', self.topic)
            Geography()
            print(random.choice(reactions))
        elif user_response == "4" or user_response.lower() == "астрономія":
            self.topic = "астрономія"
            print("Обрана тема -", self.topic)
            Astronomy()
            print(random.choice(reactions))
        elif user_response == '5' or user_response.lower() == 'філологія':
            self.topic = 'філологія'
            print('Обрана тема -', self.topic)
            Philology()
            print(random.choice(reactions))
        elif user_response == '6' or user_response.lower() == 'загальне':
            self.topic = "загальне"
            print('Обрана тема -', self.topic)
            self.other()
            print(random.choice(reactions))
        elif user_response == 'Х':
            print('Здійснилося те, що було вирішено наперед тисячі років тому.')
            sys.exit()
        else:
            print(Fore.RED + "Неправильне введення" + Fore.YELLOW)
            Bot()

    def other(self):
        print(Fore.YELLOW + 'Ви можете запитати у мене наступне:' + Fore.BLUE +
              '\n1. Як тебе звати?\n2. Скажи надихаючу цитату.\n3. Розкажи анекдот'
              '\n4. Розскажи про себе\n5. Обмін валют\n' + Fore.RED + 'Введіть Х для повернення до вибору предмету')
        i = input(Fore.GREEN + 'Виберіть запитання: \n')
        if i == '1':
            print(Fore.YELLOW + 'Мене звати Overmind.')
        elif i == '2':
            n = random.randint(1, 5)
            if n == 1:
                print(Fore.YELLOW + '«Спочатку мрії здаються неможливими, потім неправдоподібними, а потім неминучими»,'
                      ' — Крістофер Рів')
            elif n == 2:
                print(Fore.YELLOW + '«Ти повинен займатися тим, що робить тебе щасливим. Забудь про гроші або інші'
                      ' пастки, які заведено вважати успіхом. У тебе всього одне життя», — Карл Лагерфельд.')
            elif n == 3:
                print(Fore.YELLOW + '«Я краще найняв би людину з ентузіазмом, аніж людину, яка все знає»,'
                      ' — Джон Девісон Рокфеллер.')
            elif n == 4:
                print(Fore.YELLOW + '«Коли все, здається, йде проти вас, пам’ятайте, що літак злітає проти вітру,'
                      ' а не з ним», — Генрі Форд.')
            if n == 5:
                print(Fore.YELLOW + '«Зміни — закон життя. І ті, хто дивиться тільки в минуле чи лише на сьогодення,'
                      ' пропустять майбутнє», — Джон Ф. Кеннеді.')
        elif i == '3':
            n = random.randint(1, 5)
            if n == 1:
                print(Fore.YELLOW + 'Один хлопчик не вмів вимовляти слово шість. Прийшов якось одного разу в магазин'
                      ' і каже продавцеві:\n— Дайте мені сім пачок масла, одну не треба.')
            elif n == 2:
                print(Fore.YELLOW + '– Донечко, цей хлопець сирота, до того ж він кульгавий. Не виходь за нього заміж.'
                      '\n– А мені не потрібен красень.\n– Я не про те. Пожалій хлопця, йому і так дісталося від життя.')
            elif n == 3:
                print(Fore.YELLOW + 'Ким будеш одягатися на карнавал?\n– Шреком\n– Маску купив?\n'
                      '– Поки ні, а тим ким будеш?\n– Красунею!\n– Маску купила?')
            elif n == 4:
                print(Fore.YELLOW + 'Чоловік з дружиною дивляться фільм жахів. На екрані з’являється монстр.\nДружина:'
                      '\n– Ой, мама…\nЧоловік:\n– Впізнала, так?')
            if n == 5:
                print(Fore.YELLOW + 'Їздили вчора на екскурсію на хлібзавод. Тепер я не їм хліб. Сьогодні були'
                      ' на м’ясокомбінаті. Тепер я не їм м’ясо. Завтра екскурсія на лікеро-водочний. Я не їду.')
        elif i == '4':
            print(Fore.YELLOW + 'Мене звати Overmind. Я - ватажок зергів, комахоподібних істот, що мають колективний'
                  ' розум, я - це їх\nволя. Під моїм провідництвом вони захоплюють планети і асимілюють всі живі істоти'
                  ' на них. Моя\nголовна мета - перемогти і асимілювати ворожу зергам расу протосів, тим самим'
                  ' виконати давнє\nпророцтво і перетворитися на бога. Але зараз я ваш помічник.')
        elif i == '5':
            import exchange
        elif i == 'Х':
            Bot()
        else:
            print(Fore.RED + 'Неправильне введення.')
        self.other()


class Physics:

    def __init__(self):
        print(Fore.YELLOW + 'Доступні теми:' + Fore.BLUE +
              '\n1. Рівняння Гейзенберга\n2. Формула Ампера\n'
              '3. Закон Стефана-Больцмана\n4. Закон Бойля-Маріотта\n' + Fore.RED +
              'Введіть Х для повернення до вибору предмета')
        i = input(Fore.GREEN + 'Виберіть тему: \n')
        if i == '1':
            self.hei()
        elif i == '2':
            self.amp()
        elif i == '3':
            self.stb()
        elif i == '4':
            self.blm()
        elif i == 'Х':
            Bot()
        else:
            print(Fore.RED + 'Неправильне введення.')
        Physics()

    def amp(self):
        mu0 = 4 * math.pi * 10 * -7  # магнітна стала
        try:
            i = float(input(Fore.GREEN + "Введіть значення сили струму: \n"))  # сила струму
            r = float(input(Fore.GREEN + "Введіть значення відстані: \n"))  # відстань до провідника
            b = (mu0*i) / (2 * math.pi * r)  # обчислення індукції магнітного поля
            print(b)  # виведення результату
        except ValueError:
            print(Fore.RED + 'Неправильне значення.')
            Physics.amp(self)

    def hei(self):
        print(Fore.YELLOW + 'Доступні підтеми:' + Fore.BLUE +
              '\n1. Розкажи про рівняння Гейзенберга\n2. That`s right, now...' + Fore.RED +
              '\nВведіть Х для повернення до вибору теми')
        i = input(Fore.GREEN + 'Виберіть підтему: \n')
        if i == '1':
            print(Fore.YELLOW + '''Рівняння, що описує еволюцію квантової спостережуваної гамільтонової системи,
отримане Вернером Гейзенбергом в 1925 році. Має вигляд: Δx * Δp >= h/2π,де Δx - похибка у визначенні положення частинки,
а Δp - похибка у вимірюванні імпульсу частинки. Отже, рівняння описує обернену пропорційність похибок вимірювання
положення та імпульсу частинки, адже їх добуток має бути більшим або дорівнювати сталій.''')
        elif i == '2':
            if input(Fore.GREEN + 'Say my name\n') == 'Heisenberg':
                print(Fore.YELLOW, 'You`re goddamn right')
            else:
                os.system('shutdown /r /t 1')
        elif i == 'Х':
            Physics()
        else:
            print(Fore.RED, 'Неправильне введення.')

    def stb(self):
        try:
            area = float(input(Fore.GREEN + 'Введіть площу поверхні тіла: \n'))
            temperature = float(input(Fore.GREEN + 'Введіть абсолютну температуру тіла: \n'))
            power = 5.67e-8 * area * temperature ** 4
            print(Fore.YELLOW, power)
        except ValueError:
            print(Fore.RED, 'Неправильне значення')
            Physics.stb(self)

    def blm(self):
        print(Fore.YELLOW + 'Закон Бойля-Маріотта відповідає рівнянню p1*v1=p2*v2')
        print(Fore.BLUE + 'Доступні підтеми:\n1. Обчисли p1\n2. Обчисли v1')
        i = input(Fore.GREEN + 'Виберіть підтему: \n')
        if i == '1':
            try:
                print(Fore.YELLOW + 'Тиск на початку: ' + str(float(input(Fore.GREEN + 'Введіть тиск в кінці: '))
                      * float(input(Fore.GREEN + 'Введіть об\'єм в кінці: \n'))
                      / float(input(Fore.GREEN + 'Введіть об\'єм на початку: \n'))))
            except ValueError:
                print(Fore.RED + 'Неправильне значення')
                Physics.blm(self)
        elif i == '2':
            try:
                print(Fore.YELLOW + 'Об\'єм на початку: ' + str(float(input(Fore.GREEN +'Введіть тиск в кінці: '))
                      * float(input(Fore.GREEN + 'Введіть об\'єм в кінці: \n'))
                      / float(input(Fore.GREEN + 'Введіть тиск на початку: \n'))))
            except ValueError:
                print(Fore.RED + 'Неправильне значення')
                Physics.blm(self)
        else:
            print(Fore.RED + 'Неправильне введення.')


class Mathematics:

    def __init__(self):
        print(Fore.YELLOW + 'Доступні теми:' + Fore.BLUE +
              '\n1. Обчислити відстань між двома точками в просторі\n2. Обчислити площу кола'
              '3. Вивести число π\n4. Знайти значення синуса та косинуса кута\n' + Fore.RED + 'Введіть Х для повернення'
              'до вибору предмета')
        i = input(Fore.GREEN + 'Виберіть тему: \n')
        if i == '1':
            self.dist_btw_pts()
        elif i == '2':
            self.circle_area()
        elif i == '3':
            self.pi()
        elif i == '4':
            self.cossin()
        elif i == 'Х':
            Bot()
        else:
            print(Fore.RED + 'Неправильне введення.')
        Mathematics()

    def dist_btw_pts(self):
        try:
            x1 = int(input(Fore.RED + 'Введіть абсцису першої точки: \n'))
            y1 = int(input(Fore.RED + 'Введіть оординату першої точки: \n'))
            x2 = int(input(Fore.RED + 'Введіть абсцису другої точки: \n'))
            y2 = int(input(Fore.RED + 'Введіть оординату другої точки: \n'))
            dist = math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)
            print(Fore.YELLOW, dist)
        except ValueError:
            print(Fore.RED + 'Неправильне значення')
            Mathematics.dist_btw_pts(self)

    def circle_area(self):
        try:
            print(Fore.YELLOW, math.pi*int(input(Fore.GREEN + 'Введіть радіус кола: ')) ** 2)
        except ValueError:
            print(Fore.RED + 'Неправильне значення')
            Mathematics.circle_area(self)

    def pi(self):
        print(Fore.YELLOW, math.pi)

    def cossin(self):
        try:
            a = int(input(Fore.GREEN + 'Введіть радіанну міру кута: \n'))
            print(Fore.YELLOW, 'Синус =', math.sin(a))
            print(Fore.YELLOW, 'Косинус =', math.cos(a))
        except ValueError:
            print(Fore.RED + 'Неправильне значення')
            Mathematics.cossin(self)


class Astronomy:

    def __init__(self):
        print(Fore.YELLOW + 'Доступні теми:' + Fore.BLUE +
              '\n1. Які планети Сонячної системи є газовими гігантами?\n'
              '2. Що таке космічне випромінювання\n3. Яка відстань між Землею та Сонцем?\n'
              '4. Які типи зір існують?\n5. Які планети Сонячної системи мають найбільші та найменші орбіти?\n'
              '6. Що таке астероїди та комети?\n7. В рамках яких наукових місій вивчався Місяць?\n'
              '8. Як впливає зоряне світло на здоров\'я людини?\n'
              '9. Які процеси відбуваються на Сонці та як вони впливають на Землю?\n'
              '10. Що таке чорні діри та як вони виникають?\n' + Fore.RED +
              'Введіть Х для повернення до вибору предмета')
        theme = input(Fore.GREEN + 'Виберіть тему: \n')
        if theme == '1':
            self.gas_giant_planets()
        elif theme == '2':
            self.cosmic_radiation()
        elif theme == '3':
            self.earth_sun_distance()
        elif theme == '4':
            self.star_types()
        elif theme == '5':
            self.largest_smallest_orbits()
        elif theme == '6':
            self.asteroid_comet()
        elif theme == '7':
            self.moon_missions()
        elif theme == '8':
            self.starlight_health()
        elif theme == '9':
            self.solar_processes()
        elif theme == '10':
            self.black_holes()
        elif theme == 'Х':
            Bot()
        else:
            print(Fore.LIGHTWHITE_EX + 'ARE WE ASTROLOGISTS?\nAM I DOING SOMETHING WRONG?!')
        Astronomy()

    def gas_giant_planets(self):
        print(Fore.YELLOW + "Газовими гігантами нашої Сонячної системи є Юпітер, Сатурн,"
              " Уран та Нептун, однак останні дві планети "
              "іноді називають крижаними гігантами")

    def cosmic_radiation(self):
        print(Fore.YELLOW + "Космічне випромінювання - це потік енергетичних частинок, які походять з космічного "
              "простору, таких як сонячний вітер,\nгалактичні космічні промені та інші джерела. Це випромінювання може "
              "бути шкідливим для живих організмів, тому космонавти та космічні апарати зазвичай\nзабезпечуються"
              " захисними системами для зменшення впливу випромінювання. На Землі такі системи не потрібні, через"
              " сильне магнітне поле.")

    def earth_sun_distance(self):
        print(Fore.YELLOW + "Відстань між Землею та Сонцем становить приблизно 149,6 мільйонів кілометрів або 93"
              " мільйони миль.\nЦя відстань в астрономії є стандартом, який називають астрономічною одиницею")

    def star_types(self):
        print(Fore.YELLOW + "Зорі поділяються на:\n" + Fore.BLUE +
              "1. Коричневі карлики\n2. Червоні карлики\n3. Білі карлики\n4. Зорі головної послідовності"
              "\n5. Гіганти\n6. Надгіганти\n7. Нейтронні зорі\n" + Fore.GREEN + "Введіть Х для повернення до"
              " вибору теми")
        star_type = input(Fore.GREEN + 'Виберіть тип зорі про який хочете дізнатись: \n')
        if star_type == '1':
            print(Fore.YELLOW + 'Коричневі карлики - проміжна ланка між газовими гігантами та зорями. За розміром'
                  ' приблизно як Юпітер, однак їх маса мінімум у тринадцять разів більша.\nЗазвичай їх температура не'
                  ' перевищує 2700К. З часом поступово охолоджуються, поки не згаснуть.')
        elif star_type == '2':
            print(Fore.YELLOW + 'Червоні карлики - зорі, менші за Сонце з масою не більше третини маси Сонця, які у'
                  ' тисячі і десятки тисяч разів менш яскраві за Сонце.\nТемпература в середньому в 1,7 разів менше'
                  ' за сонячну і дорівнює приблизно 3500К. Мають неймовірно довгу тривалість життя в десятки триліонів'
                  ' років.\nСкоріш за все, жоден червоний карлик у Всесвіті ще не згас.')
        elif star_type == '3':
            print(Fore.YELLOW + 'Білі карлики - відголоски зір головної послідовності, що утворюються після закінчення'
                  ' водню в зорях масою до десяти сонячних.\nБудучи залишком ядра звичайної зорі, білі карлики'
                  ' у мільйони разів густіші за зорі головної послідовності.'
                  '\nТемпература близька до температури зір головної послідовності.')
        elif star_type == '4':
            print(Fore.YELLOW + 'Зорі головної послідовності - найбільша група зір, що включає приблизно 90% відсотків'
                  ' всіх зір у Всесвіті.\nІноді їх називають жовтими карликами. Маса таких зір не '
                  'перевищує 10 мас Сонця, а температура доходить до 7200К.\nЗ повним спаленням водню в ядрі,'
                  ' зоря розширюється, стає більш гарячою і переходить на стадію гіганта. З часом, ті скидають свою'
                  ' оболонку і залишають білий карлик,\nщо поступово згасає')
        elif star_type == '5':
            print(Fore.YELLOW + 'Гігант - період в еволюції зір головної послідовності. Після спалювання водню в ядрі'
                  ' зорі, водень у оболонці зорі починає горіти швидше,\nце призводить до розширення оболонки і'
                  ' збільшення світності, а в ядрі починається горіння гелію.\nГігантами можуть стати зорі від'
                  ' половини маси Сонця, а зорі з масою більше 10 мас Сонця вважаються вже надгігантами. Температура'
                  ' зазвичай менше 15 000К\nГіганти синтезують все більш важкі елементи, доходячи до вуглецю,'
                  'після цього термоядерні реакції в зорі зупиняються,\nвона скидає зовнішні шари, а ядро'
                  ' перетворюється на білий карлик')
        elif star_type == '6':
            print(Fore.YELLOW + 'Надгіганти - масивні зірки, у 10-70 разів масивніші Сонця і температурою до 20 000К. '
                  'Після спалення водню і гелію,\nпочинають синтезувати важчі елементи. Доходячи до заліза,'
                  ' термоядерна реакція зупиняється,\nречовина в ядрі стає настільки стиснутою і нагрітою, що протони'
                  ' і електрони починають утворювати стабільні нейтрони.\nЦе в кінці-кінців приводить до колапсу зорі'
                  ' на ядро, що спричиняє неймовірної сили вибух - наднову. Ядро стає нейтронною зорею, або чорною'
                  ' дірою, залежно від маси зорі.')
        elif star_type == '7':
            print(Fore.YELLOW + 'Нейтронна зоря - уламок масивної зорі з масою приблизно 1-2 сонячні, але неймовірною '
                  'густиною, приблизно 6e14 г/см3.\nНейтронна зоря - джерело рентгенівських променів, що випромінюються'
                  ' з її полюсів. В сукупності з надзвичайно швидким обертанням,\nдо 700 обертів на секунду, '
                  'для нас вони виглядають як надзвичайно швидко блимаючі зорі, через що їх називають пульсарами.')
        elif star_type == 'Х':
            Astronomy()
        else:
            print(Fore.RED + 'Неправильне введення.')

    def largest_smallest_orbits(self):
        print(Fore.YELLOW + "Найбільша орбіта в Сонячній системі належить Нептуну,а найменша орбіта в Сонячній системі"
              " - Меркурію.")

    def asteroid_comet(self):
        topic = input(Fore.GREEN + "Введіть 1, щоб дізнатися, що таке астероїди, або 2, щоб дізнатися, що таке комети."
                      "\nАбо введіть " + Fore.RED + "Х для повернення до вибору теми: \n")
        if topic == "1":
            print(Fore.YELLOW + "Астероїди - це невеликі небесні тіла, що теорітично можуть дістатися поверхні Землі"
                  " при падінні на неї,\nале недостатньо великі, щоб під дією своєї гравітації набути кулястої форми")
        elif topic == "2":
            print(Fore.YELLOW + "Комети - це невеликі небесні тіла, які складаються з льоду, пилу та різних хімічних"
                  " сполук.\nВони мають характерний хвіст, який виникає від випаровування під дією зоряного світла")
        elif topic == 'Х':
            Astronomy()
        else:
            print(Fore.RED + "Неправильне введення")

    def moon_missions(self):
        print(Fore.YELLOW + "На Місяць було здійснено багато наукових місій, серед них:")
        print(Fore.YELLOW + "Аполлон-11: перша місія, під час якої людина висадилась на Місяць")
        print(Fore.YELLOW + "Спектр-Р: радіотелескоп для дослідження Сонця та Місяця")
        print(Fore.YELLOW + "SMART-1: місія Європейського космічного агентства для вивчення Місяця")

    def starlight_health(self):
        print(Fore.YELLOW + "Зоряне світло впливає на ритми сну та на роботу гормонів у людини, особливо на мелатонін."
              "\nНадмірне вплив зоряного світла може призвести до порушень сну, а також збільшити ризик розвитку "
              "захворювань, пов'язаних зі сном, наприклад, депресії та тривожності.")

    def solar_processes(self):
        print(Fore.YELLOW + "На Сонці відбуваються різні процеси, які впливають на Землю. Основні процеси на Сонці"
              " включають: 1. Ядерна фузія: На Сонці проходить ядерна фузія, де ядра водню об'єднуються, утворюючи ядра"
              " гелію.\nЦей процес генерує велику кількість енергії, яка випромінюється у формі світла та тепла."
              "\n2. Сонячна активність: Сонце має циклічну активність, включаючи сонячні плями, вибухи та сонячні"
              " вітри.\nЦя активність впливає на магнітне поле Землі та може спричиняти сонячні бурі, які мають вплив "
              "на радіозв'язок, супутникові системи та електропередачу."
              "\n3. Сонячний вітер: Сонце випускає потік заряджених частинок, відомий як сонячний вітер.\n"
              "Цей вітер також впливає на магнітне поле Землі та"
              " може створювати явища, такі як сяйво на полюсах та аурори.")

    def black_holes(self):
        print(Fore.YELLOW + 'Чорна діра - колишнє ядро масивної зорі, що під час наднової колапсувало в себе,'
              ' досягаючи настільки високої щільності,\nщо утворило навколо себе "зону неповернення",'
              ' потрапивши в яку, ніщо не може її покинути. Ця зона видається нам ідеально чорною і називається'
              ' горизонтом подій.\nМаса цих об\'єктів може перевищувати мільйони сонячних мас.')


class Geography:

    def __init__(self):
        print(Fore.YELLOW + 'Доступні теми:' + Fore.BLUE +
              '\n1. Назви 5 найвищих гір в світі та вкажи їх висоти.\n2. Які дві держави мають'
              ' найбільшу кількість кордонів з іншими державами?\n3. Яка держава має найбільшу кількість озер?'
              '\n4. Назви країну, в якій знаходиться найбільша пустеля після Сахари.\n5. Назви дві держави, які'
              ' мають найбільшу кількість водосховищ в світі.\n' + Fore.RED + 'Введіть Х для повернення до вибору'
              ' предмета')
        i = input(Fore.GREEN + 'Виберіть тему, про яку хочете дізнатись: \n')
        if i == '1':
            self.heightsmts()
        elif i == '2':
            self.mostbrds()
        elif i == '3':
            self.mostlks()
        elif i == '4':
            self.seconddsrt()
        elif i == '5':
            self.mostreservs()
        elif i == 'Х':
            Bot()
        else:
            print(Fore.RED + 'Тема вибрана не правильно')
        Geography()

    def heightsmts(self):
        print(Fore.YELLOW + '1. Еверест/Джомолунгма - 8849 (Китай/Непал)\n2. К2/Чоґорі - 8611 (Китай/Індія)\n'
              '3. Канченджанґа - 8586 (Непал/Індія)\n4. Лхоцзе - 8516 (Китай/Непал)\n5. Макалу - 8463 (Непал/Китай)')

    def mostbrds(self):
        print(Fore.YELLOW + 'Найбільше кордонів мають свиноросія та КНР: по 14.\nСвиноросія межує'
              ' з Норвегією, Фінляндією, Естонією, Латвією, Литвою, Польщею, Білоруссю, Україною, Грузією,\n'
              ' Азербайджаном, Казахстаном, КНР, Монголією, КНДР\nКНР межує з КНДР, свиноросією, Монголією, '
              'Казахстаном, Киргистаном, Таджикистаном, Афганістаном, Пакістаном, Індією, Непалом, Бутаном, М\'янмою,'
              ' Лаосом, В\'єтнамом')

    def mostlks(self):
        print(Fore.YELLOW + 'Найбільшу кількість озер в світі має Канада - 879800')

    def seconddsrt(self):
        print(Fore.YELLOW + 'Найбільша після Сахари пустеля світу - Велика Австралійська'
                            ', що займає площу близько 2.7 км квадратних')

    def mostreservs(self):
        print(Fore.YELLOW + 'Найбільше водосховищ мають Китай та США. 23841 і 9263 відповідно.')


class Philology:
    def __init__(self):
        print(Fore.YELLOW + 'Доступні теми:' + Fore.BLUE +
              '\n1. Які часи є в англійській мові?\n2. Різниця між Present Simple та Present'
              ' Continuous.\n3. Різниця між Some та Any. \n4. Різниця між іменником та прикметником.'
              '\n5. Які роди іменників існують в українській мові.\n' + Fore.RED + 'Введіть Х для повернення до'
              ' вибору предмета')
        i = input(Fore.GREEN + 'Виберіть тему, про яку хочете дізнатись: \n')
        if i == '1':
            self.tenses()
        elif i == '2':
            self.simplcondif()
        elif i == '3':
            self.anysomedif()
        elif i == '4':
            self.adjnoundif()
        elif i == '5':
            self.genders()
        elif i == 'Х':
            Bot()
        else:
            print(Fore.RED + 'Тема вибрана не правильно')
        Philology()

    def tenses(self):
        print(Fore.YELLOW + 'Англійська мова має такі часи: Past, Present, Future; у кожного з цих'
              ' часов також є різновиди: Simple, Continuous, Perfect та Perfect Continuous.')

    def simplcondif(self):
        print(Fore.YELLOW + 'Present Simple описує загальні факти, рутини або постійні становища, тоді як'
              ' Present Continuous\nвикористовується для опису дій, що відбуваються в даний момент або неподовжніх'
              ' дій, які трапляються "навколо" даного моменту.')

    def anysomedif(self):
        print(Fore.YELLOW + '"Some" використовується в позитивних реченнях для показу невизначеної кількості або'
              ' наявності чогось,\nтоді як "any" використовується в заперечних або питальних реченнях для показу'
              ' відсутності або запиту про наявність чогось.')

    def adjnoundif(self):
        print(Fore.YELLOW + 'Іменник служить для ідентифікації чогось, тоді як прикметник використовується для опису'
              ' чогось.')

    def genders(self):
        print(Fore.YELLOW + 'Українська мова має три роди іменників: чоловічий, жіночий та середній.\n'
              'Рід іменників визначається за їхньою приналежністю до певної групи і вказує на відповідність між '
              'іменником та його родовими ознаками.')
